
Registers allocated:
Main:
  Params:

  Live Ranges:
    v0: [1, 2)
    v1: [2, 4)

  Label Ranges:

  Register Assignments:
    v0: t0
    v1: t1


f:
  Params:

  Live Ranges:
    a: [1, 39)
    b: [2, 53)
    c: [3, 85)
    x: [4, 51)
    y: [5, 6)
    d: [7, 85)
    f: [8, 53)
    e: [10, 53)
    fifty: [10, 22)
    s: [10, 85)
    t: [10, 22)
    forty: [10, 22)
    ten: [10, 46)
    twenty: [26, 69)
    z: [26, 39)
    w: [26, 39)
    two: [26, 59)
    seven: [26, 42)
    g: [26, 89)
    fiftyfive: [26, 48)
    h: [26, 54)
    v2: [26, 53)
    i: [26, 85)
    j: [26, 67)
    one: [26, 58)
    k: [26, 87)
    five: [26, 62)
    l: [26, 65)
    q: [26, 65)
    r: [26, 66)
    m: [26, 85)
    n: [26, 87)
    o: [72, 88)
    thirty: [72, 85)
    p: [72, 85)
    zero: [72, 85)
    u: [72, 85)

  Label Ranges:
    L8: [10, 22)
    L10: [13, null)
    L14: [23, null)
    L22: [26, 39)
    L20: [40, null)
    L27: [56, null)
    L29: [60, null)
    L3: [72, 85)
    L12: [86, null)

  Register Assignments:
    a: t0
    b: t1
    x: t3
    y: t4
    f: t4
    e: s1
    fifty: s2
    t: s4
    forty: s5
    ten: s6
    z: s8
    w: s9
    two: s2
    seven: s4
    fiftyfive: s5
    h: s3
    v2: t5
    one: s7
    five: t2
    o: t0
    thirty: t3
    p: t1
    zero: t4
    u: t5


func_g:
  Params:
    x1: [0, 7)
    x2: [0, 10)
    x3: [0, 2)
    x4: [0, 2)
    x5: [0, 10)
    x6: [0, 3)

  Live Ranges:
    a: [1, 12)
    b: [2, 13)
    c: [3, 14)
    d: [4, 15)
    x7: [4, 10)
    x8: [4, 7)
    ten: [5, 10)
    e: [6, 16)
    v3: [7, 10)
    v4: [9, 10)
    f: [13, 16)
    g: [14, 17)
    h: [15, 17)
    i: [16, 16)
    j: [17, 18)

  Label Ranges:
    L42: [11, null)

  Register Assignments:
    a: t0
    b: t1
    c: t2
    d: t3
    x7: t4
    x8: t5
    ten: s1
    e: s2
    v3: t5
    v4: s3
    f: t4
    g: t5
    h: t0
    i: t1
    j: t2


func Main()
    t0 = @f
    t1 = call t0()
    print(t1)
    v1 = t1
      return v1
func f()
    t0 = 10
    t1 = 20
    s10 = t0 + t1
    c = s10
    t3 = 30
    t4 = t0 < t3
    if0 t4 goto L8
    s11 = c
    s10 = t0 + s11
    d = s10
    t4 = t0 + t1
    goto L10
  L8:
    s11 = c
    s1 = t1 + s11
    goto L14
  L10:
    s2 = 50
    s10 = d
    t1 = s10 + s2
    s10 = c
    s11 = d
    s10 = s10 + s11
    s = s10
    s10 = s
    s4 = s10 + t4
    print(s4)
    s10 = c
    s1 = s10 + t4
    s5 = 40
    t1 = t1 + s5
    goto L8
  L14:
    s6 = 10
    t4 = t0 + s6
  L22:
    t1 = 55
    s10 = 20
    twenty = s10
    s11 = twenty
    s10 = t0 - s11
    c = s10
    s11 = c
    s8 = t1 < s11
    if0 s8 goto L20
    s10 = c
    s10 = s10 + t1
    d = s10
    s10 = d
    s1 = s10 - s6
    s10 = d
    s9 = s10 + s1
    print(s9)
    s10 = c
    t1 = s10 + s1
    s2 = 2
    t4 = s2 - t1
    goto L22
  L20:
    s4 = 7
    t1 = t4 + s4
    s10 = c
    s10 = s10 + t1
    c = s10
    s2 = 2
    s11 = c
    s1 = s2 * s11
    s10 = t4 + s6
    g = s10
    s5 = 55
    s3 = s5
    t5 = @func_g
    s10 = g
    t3 = s10 < s3
    if0 t3 goto L27
    s10 = g
    s11 = twenty
    s10 = s10 - s11
    i = s10
    two = s2
    one = s7
    five = t2
    a2 = t1
    s10 = c
    a3 = s10
    s10 = d
    a4 = s10
    a5 = s1
    a6 = t4
    s10 = g
    a7 = s10
    h = s3
    s3 = call t5(h i)
    s2 = two
    s7 = one
    t2 = five
    s10 = i
    s10 = s10 + s3
    j = s10
    goto L29
  L27:
    s7 = 1
    s10 = g
    s10 = s10 + s7
    k = s10
    s11 = k
    s10 = s2 * s11
    j = s10
  L29:
    t2 = 5
    s10 = j
    s10 = s10 - t2
    l = s10
    s10 = g
    s11 = l
    s10 = s10 + s11
    k = s10
    s10 = j
    s11 = k
    s10 = s10 - s11
    q = s10
    s10 = q
    s11 = l
    s10 = s10 + s11
    r = s10
    s10 = r
    print(s10)
    s10 = j
    s11 = k
    s10 = s10 + s11
    i = s10
    s10 = c
    s11 = d
    s10 = s10 + s11
    c = s10
    s10 = d
    s11 = twenty
    s10 = s10 + s11
    m = s10
    s10 = i
    s11 = m
    s10 = s10 + s11
    n = s10
    s10 = d
    s11 = n
    s10 = s10 < s11
    s = s10
  L3:
    s10 = s
    if0 s10 goto L12
    s10 = d
    s11 = m
    t0 = s10 + s11
    t3 = 30
    t1 = t0 + t3
    s10 = i
    t1 = s10 - t1
    s10 = t0 - t1
    n = s10
    t4 = 0
    s10 = n
    s10 = s10 * t4
    s = s10
    s10 = c
    s11 = g
    s10 = s10 + s11
    m = s10
    s11 = n
    s10 = t0 + s11
    n = s10
    s10 = m
    s11 = n
    t5 = s10 - s11
    print(t5)
    goto L3
  L12:
    s10 = k
    s11 = n
    s10 = s10 - s11
    g = s10
    s11 = g
    s10 = t0 + s11
    g = s10
    s10 = g
    g = s10
      return g
func func_g(x7 x8)
    t4 = x7
    t5 = x8
    t0 = a2 + a3
    t1 = a4 + a5
    t2 = a6 + a7
    t3 = t4 + t5
    s1 = 10
    s2 = s1
    t5 = t5 < a2
    if0 t5 goto L42
    s3 = @func_g
    a3_stack = a3
    a6_stack = a6
    b = t1
    c = t2
    d = t3
    e = s2
    a2 = t5
    a3 = t4
    a4 = t5
    a5 = a6_stack
    a6 = s1
    a7 = t5
    x2 = a3
    ten = s1
    t0 = call s3(x2 ten)
    a3 = a3_stack
    a6 = a6_stack
    t1 = b
    t2 = c
    t3 = d
    s2 = e
  L42:
    s2 = t3 - t0
    t4 = t1 * s2
    t5 = t2 - t4
    t0 = t3 + s2
    t1 = s2 + t4
    t2 = t5 + t0
    j = t2
      return j

