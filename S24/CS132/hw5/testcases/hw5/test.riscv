.equiv @sbrk, 9
.equiv @print_string, 4
.equiv @print_char, 11
.equiv @print_int, 1
.equiv @exit 10
.equiv @exit2, 17

.text

  jal Main
  li a0, @exit
  ecall

Main:
  sw fp, -8(sp)
  mv fp, sp
  li t6, 16
  sub sp, sp, t6
  sw ra, -4(fp)
  li t0, 4
  sw t0, -12(fp)
  lw t1, -12(fp)
  mv a0, t1
  jal alloc
  mv t0, a0
  sw t0, -16(fp)
  lw t1, -12(fp)
  mv a0, t1
  jal alloc
  mv s1, a0
  la t0, FacComputeFac
  sw t0, -12(fp)
  lw t1, -12(fp)
  sw t1, 0(s1)
  sw s1, -12(fp)
  lw t0, -16(fp)
  lw t1, -12(fp)
  sw t1, 0(t0)
  lw t0, -16(fp)
  bnez t0 nojump_Main_null1
  jal Main_null1
nojump_Main_null1:
  lw t1, -16(fp)
  lw s2, 0(t1)
  lw s2, 0(s2)
  li t0, 6
  sw t0, -12(fp)
  li t6, 8
  sub sp, sp, t6
  lw t6, -16(fp)
  sw t6, 0(sp)
  lw t6, -12(fp)
  sw t6, 4(sp)
  jalr s2
  mv s3, a0
  mv a1, s3
  li a0, @print_int
  ecall
  li a1, @exit
  li a0, @print_char
  ecall
  j Main_main_end
Main_null1:
  la a0 msg_null
  j error
Main_main_end:
  lw a0, -12(fp)
  lw ra, -4(fp)
  lw fp, -8(fp)
  addi sp, sp, 16
  addi sp, sp, 0
  jr ra

FacComputeFac:
  sw fp, -8(sp)
  mv fp, sp
  li t6, 32
  sub sp, sp, t6
  sw ra, -4(fp)
  sw s1, -12(fp)
  sw s2, -16(fp)
  sw s3, -20(fp)
  sw s4, -24(fp)
  li s1, 1
  lw t1, 4(fp)
  slt s2, t1, s1
  bnez s2 nojump_FacComputeFac_if1_else
  jal FacComputeFac_if1_else
nojump_FacComputeFac_if1_else:
  li t0, 1
  sw t0, -28(fp)
  j FacComputeFac_if1_end
FacComputeFac_if1_else:
  lw t1, 0(fp)
  lw s3, 0(t1)
  lw s3, 0(s3)
  li s1, 1
  lw t1, 4(fp)
  sub t0, t1, s1
  sw t0, -32(fp)
  li t6, 8
  sub sp, sp, t6
  lw t6, 0(fp)
  sw t6, 0(sp)
  lw t6, -32(fp)
  sw t6, 4(sp)
  jalr s3
  mv s4, a0
  lw t1, 4(fp)
  mul t0, t1, s4
  sw t0, -28(fp)
FacComputeFac_if1_end:
  lw s1, -12(fp)
  lw s2, -16(fp)
  lw s3, -20(fp)
  lw s4, -24(fp)
  lw a0, -28(fp)
  lw ra, -4(fp)
  lw fp, -8(fp)
  addi sp, sp, 32
  addi sp, sp, 8
  jr ra

error:
  li a0, @print_string
  ecall
  li a1, 10
  li a0, @print_char
  ecall
  li a0, @exit
  ecall
abort_17:
  j abort_17

alloc:
  mv a1, a0
  li a0, @sbrk
  ecall
  jr ra

.data

msg_null:
.asciiz "null pointer"
.align 2

msg_arr_index:
.asciiz "array index out of bounds"
.align 2
